// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  quizzes  Quiz[]
  questions Question[]
}

model User {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  password    String
  quizzes     Quiz[]
  submissions submission[]
  leaderboard leaderboard[]
}

model Quiz {
  id            Int          @id @default(autoincrement())
  title         String
  noofquestions Int          @default(0)
  questions     Question[]
  admin         Admin        @relation(fields: [adminId], references: [id])
  adminId       Int
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  active        Boolean      @default(false)
  code          String?      @unique
  users         User[]
  submissions   submission[]
  leaderboard   leaderboard[]
}

model Question {
  id         Int          @id @default(autoincrement())
  question   String
  option1    String
  option2    String
  option3    String?
  option4    String?
  answer     Int
  quizId     Int
  adminId    Int
  quiz       Quiz         @relation(fields: [quizId], references: [id])
  admin      Admin        @relation(fields: [adminId], references: [id])
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  submission submission[]
}

model submission {
  id         Int      @id @default(autoincrement())
  quizId     Int
  userId     Int
  questionId Int
  isCorrect  Boolean
  quiz       Quiz     @relation(fields: [quizId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model leaderboard {
  id Int @id @default(autoincrement())
  quizId Int
  userId Int
  score Int
  quiz Quiz @relation(fields: [quizId], references: [id])
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}